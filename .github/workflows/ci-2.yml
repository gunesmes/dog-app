name: CI-2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  get-runner:
    name: 'Get Runner - dogapp - dog-registration'
    if: ${{ always() }}
    runs-on: custom-runner
    outputs:
     RUNNER: ${{ runner.name }}
    steps:
      - run: echo "selected runner = ${{ runner.name }}"

  call-build-test:
    name: 'Unit Test dog-registration'
    needs: get-runner
    runs-on: ${{needs.get-runner.outputs.RUNNER}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: go mod download
        working-directory: ./dog-registration

      - name: Run tests
        run: go test -v ./...
        working-directory: ./dog-registration
  
  run-services:
    name: 'Run Services'
    needs: [get-runner, call-build-test]
    runs-on: ${{needs.get-runner.outputs.RUNNER}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Set up Docker Compose
        run: |
          docker-compose up -d
      
      - name: Wait for service to be ready
        run: |
          while ! curl -sSf http://localhost:8084/dogs; do
            echo "Waiting for service to be ready..."
            sleep 5
          done
        working-directory: ./dog-registration
      
      - name: Run performance tests
        run: |
          cd ./dog-registration/test
          k6 run performance_test.js

  call-performace-test:
    name: 'Performance Test dog-registration'
    needs: [get-runner, call-build-test, run-services]
    runs-on: ${{needs.get-runner.outputs.RUNNER}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install K6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
      - name: Run performance tests
        run: |
          cd ./dog-registration/test
          k6 run performance_test.js
