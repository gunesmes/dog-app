name: 'CI - dog-registration'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  call-build-test:
    name: 'Unit Test - registration'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: go mod download
        working-directory: ./dog-registration

      - name: Run tests
        run: go test -v ./...
        working-directory: ./dog-registration
  
  contract-test:
    name: 'Contract Test - registration'
    runs-on: ubuntu-latest
    needs: call-build-test
    steps:
      - name: Sleep for now
        run: sleep 2
  
  performance-test:
    name: 'Performance Test - registration'
    runs-on: ubuntu-latest
    needs: [call-build-test, contract-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      - name: Set up Docker Compose
        run: |
          docker-compose up -d
      
      - name: Wait for service to be ready
        run: |
          while ! curl -sSf http://localhost:8084/dogs; do
            echo "Waiting for service to be ready..."
            sleep 5
          done
        working-directory: ./dog-registration

      - name: Install K6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
      
      - name: Run performance tests
        run: |
          k6 run ./dog-registration/test/performance_test_ml.js
      
      - name: Show performance result
        run: |
          cat ./dog-registration/test/http_req_duration.csv
  
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: ./dog-registration/test/http_req_duration.csv
              
  evaluate-anomaly:
    name: 'Evaluate Performance Test - registration'
    runs-on: ubuntu-latest
    needs: performance-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.8'

      - name: Install pip
        run: |
          sudo apt-get install python3-pip
          pip3 --version

      - name: Install Required Python packages
        run: |
          pip3 install -r requirements.txt
          
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: performance-results
          path: ./dog-registration/test/
                
      - name: Analyze anomaly
        run: |
          python3.10 analyze_anomaly_with_ml.py

      - name: Analyze regression
        run: |
          python3.10 analyze_regression_with_ml.py

      - name: Analyze trend
        run: |
          python3.10 analyze_trend_with_ml.py
      
      - name: Upload analysis results
        uses: actions/upload-artifact@v4
        with:
          name: analyze-anomaly-results
          path: ./plots/analyze_anomaly/

  evaluate-regression:
    name: 'Evaluate Performance Test - registration'
    runs-on: ubuntu-latest
    needs: performance-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.8'

      - name: Install pip
        run: |
          sudo apt-get install python3-pip
          pip3 --version

      - name: Install Required Python packages
        run: |
          pip3 install -r requirements.txt
          
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: performance-results
          path: ./dog-registration/test/
                
      - name: Analyze regression
        run: |
          python3.10 analyze_regression_with_ml.py

      - name: Upload analysis results
        uses: actions/upload-artifact@v4
        with:
          name: analyze-regression-results
          path: ./plots/analyze_regression/

  evaluate-trend:
    name: 'Evaluate Performance Test - registration'
    runs-on: ubuntu-latest
    needs: performance-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.8'

      - name: Install pip
        run: |
          sudo apt-get install python3-pip
          pip3 --version

      - name: Install Required Python packages
        run: |
          pip3 install -r requirements.txt
          
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: performance-results
          path: ./dog-registration/test/
                
      - name: Analyze trend
        run: |
          python3.10 analyze_trend_with_ml.py
      
      - name: Upload analysis results
        uses: actions/upload-artifact@v4
        with:
          name: analyze-trend-results
          path: ./plots/analyze_trend/

  collect-test-results:
    name: 'Collect Performance Test - registration'
    runs-on: ubuntu-latest
    needs: [evaluate-anomaly, evaluate-regression, evaluate-trend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Download anomaly results
        uses: actions/download-artifact@v4
        with:
          name: analyze-anomaly-results
          path: ./plots/analyze_anomaly/
      
      - name: Download regression results
        uses: actions/download-artifact@v4
        with:
          name: analyze-regression-results
          path: ./plots/analyze_regression/
    
      - name: Download trend results
        uses: actions/download-artifact@v4
        with:
          name: analyze-trend-results
          path: ./plots/analyze_trend/

      - name: Download performance test results
        uses: actions/download-artifact@v4
        with:
          name: performance-results
          path: ./plots/

      - name: Upload all results
        uses: actions/upload-artifact@v4
        with:
          name: all-analyze-results
          path: ./plots/

  deploy:
    name: 'Deploy - registration'
    runs-on: ubuntu-latest
    needs: [evaluate-anomaly, evaluate-regression, evaluate-trend]
    steps:
      - name: Sleep for now
        run: sleep 2
